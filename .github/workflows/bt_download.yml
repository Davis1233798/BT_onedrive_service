name: BT Download to OneDrive

on:
  workflow_dispatch:
    inputs:
      magnetlink:
        description: '磁力連結或種子URL'
        required: true
        type: string

jobs:
  download-and-upload:
    runs-on: ubuntu-latest
    
    steps:
      - name: 檢出代碼
        uses: actions/checkout@v3
      
      - name: 設置 Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: 安裝 libtorrent 依賴
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-libtorrent
      
      - name: 安裝 Python 依賴
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 設置環境變數
        env:
          ONEDRIVE_CLIENT_ID: ${{ secrets.ONEDRIVE_CLIENT_ID }}
          ONEDRIVE_CLIENT_SECRET: ${{ secrets.ONEDRIVE_CLIENT_SECRET }}
          ONEDRIVE_TOKEN: ${{ secrets.ONEDRIVE_TOKEN }}
        run: |
          echo "ONEDRIVE_CLIENT_ID=$ONEDRIVE_CLIENT_ID" >> $GITHUB_ENV
          echo "ONEDRIVE_CLIENT_SECRET=$ONEDRIVE_CLIENT_SECRET" >> $GITHUB_ENV
          echo "DOWNLOAD_DIR=./downloads" >> $GITHUB_ENV
          
          # 若有 OneDrive Token，則將其寫入檔案
          if [ ! -z "$ONEDRIVE_TOKEN" ]; then
            echo "$ONEDRIVE_TOKEN" > onedrive_token.json
          fi
      
      - name: 啟動下載任務
        run: |
          # 若未認證，先執行認證流程
          if [ ! -f onedrive_token.json ]; then
            python main.py auth
          fi
          
          # 添加下載任務
          python main.py add "${{ github.event.inputs.magnetlink }}"
          
          # 啟動服務，30分鐘後超時
          timeout 1800 python main.py start || true
      
      - name: 存檔任務狀態
        if: always()
        run: |
          # 列出任務狀態
          python main.py list > task_status.txt
          
      - name: 上傳任務狀態
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: task-status
          path: task_status.txt
          
      - name: 更新 OneDrive Token
        if: always()
        run: |
          if [ -f onedrive_token.json ]; then
            echo "ONEDRIVE_TOKEN=$(cat onedrive_token.json)" >> $GITHUB_ENV
          fi 